// <auto-generated />
using BakeryApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BakeryApp.Infrastructure.Migrations
{
    [DbContext(typeof(BakeryDbContext))]
    [Migration("20250311195049_FixedEntities")]
    partial class FixedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.BakeryOfficeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BakeryOffices");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.BreadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BakeryOfficeEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BakeryOfficeEntityId");

                    b.HasIndex("PreparationId");

                    b.ToTable("Breads");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.IngredientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreparationEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreparationEntityId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.OrderDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BreadId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderListEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BreadId");

                    b.HasIndex("OrderListEntityId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.OrderListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BakeryOfficeEntityId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BakeryOfficeEntityId");

                    b.ToTable("OrderLists");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.PreparationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CookingTemp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CookingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FermentTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.BreadEntity", b =>
                {
                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.BakeryOfficeEntity", null)
                        .WithMany("Menu")
                        .HasForeignKey("BakeryOfficeEntityId");

                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.PreparationEntity", "Preparation")
                        .WithMany()
                        .HasForeignKey("PreparationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preparation");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.IngredientEntity", b =>
                {
                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.PreparationEntity", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PreparationEntityId");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.OrderDetailEntity", b =>
                {
                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.BreadEntity", "Bread")
                        .WithMany()
                        .HasForeignKey("BreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.OrderListEntity", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderListEntityId");

                    b.Navigation("Bread");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.OrderListEntity", b =>
                {
                    b.HasOne("BakeryApp.Infrastructure.Persistence.Entities.BakeryOfficeEntity", null)
                        .WithMany("Orders")
                        .HasForeignKey("BakeryOfficeEntityId");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.BakeryOfficeEntity", b =>
                {
                    b.Navigation("Menu");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.OrderListEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BakeryApp.Infrastructure.Persistence.Entities.PreparationEntity", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
